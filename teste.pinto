import @convert

let myTrue = true

let myFalse = false

let unit = ()

let something = unit

let myBool = myFalse

let myString = "lorem ipsum"

let myFunction _ = "lorem ipsum"

let myFunction2 _ =
  myFunction "calling myFunction2"

let myFunction3 _ =
  myString "not calling"

type Option(T) = Some(T value) + None

// ðŸ‘‡ This should be an error, as we are importing `@convert`
let jsonEncode _ = "encode"

type Other(T) = Other(
  âŠ¤ top,
  Option(T) optionT,
  T tItself,
  int integer,
  String string,
  [T] listOfT,
  {T} setOfT,
  {T: T} mapOfTT,
  T? tEroteme,
  âŠ¥ bottom
)